AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 3

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment of this stack of resources

Mappings:
  ResourcesName:
    dev:
      tableName: BookingTripDev
      tableNameArn: BookingTripDevArn
      arn: iitecomuserpool
    staging:
      tableName: BookingTripStaging
      tableNameArn: BookingTripStagingArn
      arn: iitecomuserpool
    prod:
      tableName: BookingTripProd
      tableNameArn: BookingTripProdArn
      arn: iitecomuserpool

Resources:
  BookingApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      TracingEnabled: true
      Cors: "'*'"
      # Auth:
      #   DefaultAuthorizer: MyCognitoAuthorizer
      #   Authorizers:
      #     MyCognitoAuthorizer:
      #       UserPoolArn: 
      #         Fn::GetAtt:
      #           - iitecomuserpool-UserPool
      #           - Arn
              # Fn::ImportValue: !FindInMap [ResourcesName, !Ref Environment, arn]

  BookingTrip:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.bookingTripHandler
      Runtime: nodejs12.x
      CodeUri: booking/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Environment:
        Variables:
          TABLE_NAME: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Events:
        CreateBookingAPI:
          Type: Api
          Properties:
            Path: /booking
            Method: POST
            RestApiId: !Ref BookingApi
        UpdateBookingAPI:
          Type: Api
          Properties:
            Path: /booking/{bookingId}
            Method: ANY
            RestApiId: !Ref BookingApi

  BookingTripTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      AttributeDefinitions:
        - AttributeName: bookingId
          AttributeType: S
      KeySchema:
        - AttributeName: bookingId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
          StreamViewType: NEW_IMAGE

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  BookingTripApi:
    Description: "API Gateway endpoint URL for ${Environment} stage for Booking Trip function"
    Value: !Sub "https://${BookingApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/booking/"
  BookingTrip:
    Description: "Booking Trip Lambda Function ARN"
    Value: !GetAtt BookingTrip.Arn
  BookingTripTable:
    Description: "Booking Trip Dynamo DB Table"
    Value: !FindInMap [ResourcesName, !Ref Environment, tableName]
    Export: 
      Name: !FindInMap [ResourcesName, !Ref Environment, tableName]
  BookingTripTableStream:
    Description: "Booking Trip Dynamo DB Table Stream"
    Value: !GetAtt BookingTripTable.StreamArn
    Export: 
      Name: !FindInMap [ResourcesName, !Ref Environment, tableNameArn]
  BookingTripIamRole:
    Description: "Implicit IAM Role created for Booking Trip function"
    Value: !GetAtt BookingTripRole.Arn
